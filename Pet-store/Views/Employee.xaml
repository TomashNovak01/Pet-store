<Window x:Class="Pet_store.Views.Employee"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pet_store.Views"
        xmlns:viewModel="clr-namespace:Pet_store.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Employee" Height="600" MinHeight="600" Width="1200" MinWidth="1200" WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <viewModel:EmployeeViewModel/>
    </Window.DataContext>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Авторизация" Command="{Binding GoToAuthorization}" InputGestureText="Перейти на окно авторизации"/>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Content="{Binding CurrentUser.FullName, UpdateSourceTrigger=PropertyChanged}" ContentStringFormat="Вы вошли как: {0}"/>
        </StatusBar>

        <TabControl>
            <TabItem Header="Клиенты">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>
                    <ComboBox ItemsSource="{Binding SearchListUser, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding SearchUser, UpdateSourceTrigger=PropertyChanged}"
                              materialDesign:HintAssist.Hint="Поиск" IsEditable="True" Margin="50 0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding UpdateProductListCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <DataGrid Grid.Row="1" ItemsSource="{Binding ListUsers, UpdateSourceTrigger=PropertyChanged}" 
                                  AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Header="Фамилия" 
                                                    Binding="{Binding Lastname, UpdateSourceTrigger=PropertyChanged}"/>
                            <materialDesign:DataGridTextColumn Header="Имя" 
                                                    Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                            <materialDesign:DataGridTextColumn Header="Электронная почта" 
                                                    Binding="{Binding Email, UpdateSourceTrigger=PropertyChanged}"/>
                            <materialDesign:DataGridTextColumn Header="Номер телефона" 
                                                    Binding="{Binding Phone, UpdateSourceTrigger=PropertyChanged}"/>
                            <materialDesign:DataGridTextColumn Header="Дата рождения" 
                                                    Binding="{Binding DateOfBirthday, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Покупки">
                <TabControl>
                    <TabItem Header="Корзины">
                        <DataGrid ItemsSource="{Binding ListBaskets, UpdateSourceTrigger=PropertyChanged}" 
                                  AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <materialDesign:DataGridTextColumn Header="Индекс" Binding="{Binding Id}"/>
                                <materialDesign:DataGridTextColumn Header="ФИ клиента" Binding="{Binding FullNameUser}"/>
                                <materialDesign:DataGridTextColumn Header="Индекс Заказа" Binding="{Binding IdOrder}"/>
                                <materialDesign:DataGridTextColumn Header="Индекс продукта" Binding="{Binding IdProduct}"/>
                                <materialDesign:DataGridTextColumn Header="Количество" Binding="{Binding Count, StringFormat={}{0} шт.}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Заказы">
                        <DataGrid ItemsSource="{Binding ListOrders, UpdateSourceTrigger=PropertyChanged}" 
                                  AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <materialDesign:DataGridTextColumn Header="Индекс" Binding="{Binding Id}"/>
                                <materialDesign:DataGridTextColumn Header="Индекс клиента" Binding="{Binding IdUser}"/>
                                <materialDesign:DataGridTextColumn Header="ФИ клиента" Binding="{Binding FullNameUser}"/>
                                <materialDesign:DataGridTextColumn Header="Дата заказа" Binding="{Binding DateOfOrder}"/>
                                <materialDesign:DataGridTextColumn Header="Цена" Binding="{Binding Price, StringFormat={}{0} руб.}"/>
                                <DataGridTemplateColumn Header="Готовность" SortMemberPath="IsReady">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleButton IsChecked="{Binding IsReady, UpdateSourceTrigger=PropertyChanged}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.GetReadyStatus}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ToggleButton>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
