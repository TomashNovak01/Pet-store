<Window x:Class="Pet_store.Views.Catalog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pet_store"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModel="clr-namespace:Pet_store.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Каталог" Height="600" MinHeight="600" Width="1200" MinWidth="1200" 
        WindowStartupLocation="CenterScreen"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="18"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">

    <Window.DataContext>
        <viewModel:CatalogViewModel/>
    </Window.DataContext>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Авторизация" Command="{Binding GoToAuthorization}" InputGestureText="Перейти на окно авторизации"/>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Content="{Binding User.FullName, UpdateSourceTrigger=PropertyChanged}" ContentStringFormat="Вы вошли как: {0}"/>
        </StatusBar>

        <TabControl materialDesign:ColorZoneAssist.Mode="PrimaryMid"
                Style="{StaticResource MaterialDesignFilledTabControl}">
            <TabItem Header="Товары">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>

                    <ComboBox ItemsSource="{Binding SearchList, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding Search, UpdateSourceTrigger=PropertyChanged}"
                              materialDesign:HintAssist.Hint="Поиск" IsEditable="True" Margin="50 0">
                              <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding UpdateProductListCommand}"/>
                                  </i:EventTrigger>
                              </i:Interaction.Triggers>
                    </ComboBox>

                    <DataGrid Grid.Row="1" ItemsSource="{Binding ListProduct, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Header="Наименование" Binding="{Binding Product.Name, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTemplateColumn Header="Рейтинг">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:RatingBar Value="{Binding Product.Rating, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <materialDesign:DataGridTextColumn Header="Цена" Binding="{Binding Product.Price, StringFormat={}{0} руб., UpdateSourceTrigger=PropertyChanged}"/>
                            <materialDesign:DataGridTextColumn Header="Категории" Binding="{Binding CategoriesName, UpdateSourceTrigger=PropertyChanged}"/>

                            <DataGridTemplateColumn Header="В корзину" SortMemberPath="IsInBasket">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ToggleButton IsChecked="{Binding IsInBasket, UpdateSourceTrigger=PropertyChanged}" 
                                                      Style="{StaticResource MaterialDesignSwitchLightToggleButton}"
                                                      ToolTip="Добавить в корзину">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.EditBasketCommand}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ToggleButton>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Корзина">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Row="0" ItemsSource="{Binding ProductsInBasket, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <materialDesign:DataGridTextColumn Header="Наименование" Binding="{Binding Product.Name, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTemplateColumn Header="Рейтинг">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:RatingBar Value="{Binding Product.Rating, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <materialDesign:DataGridTextColumn Header="Цена" Binding="{Binding Product.Price, StringFormat={}{0} руб., UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTemplateColumn Header="В корзину" SortMemberPath="IsInBasket">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ToggleButton IsChecked="{Binding IsInBasket, UpdateSourceTrigger=PropertyChanged}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.EditBasketCommand}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ToggleButton>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Количество">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Count, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Row="1" HorizontalAlignment="Right" Margin="15 5"
                            Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                            ToolTip="Оформить заказ"
                            Command="{Binding CreateAnOrder}">
                        <materialDesign:PackIcon Width="35" Height="35" Kind="BasketPlusOutline"/>
                    </Button>
                </Grid>
            </TabItem>

            <!--Visibility="{Binding IsVisibleMyOrders, UpdateSourceTrigger=PropertyChanged}"-->
            <TabItem Header="Мои заказы" >
                
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
